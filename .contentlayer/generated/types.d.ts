// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer/core'
import * as Local from 'contentlayer/source-files'

export { isType } from 'contentlayer/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Blog = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Blog'
  title: string
  slug: string
  date: IsoDateTimeString
  excerpt?: string | undefined
  image: Image
  tags?: string[] | undefined
  notionId?: string | undefined
  status?: boolean | undefined
  bodyText?: string | undefined
  /** Markdown file body */
  body: Markdown
  url: string
}

export type City = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'City'
  title: string
  slug: string
  date: IsoDateTimeString
  image: Image
  tags?: string[] | undefined
  notionId?: string | undefined
  status?: boolean | undefined
  bodyText?: string | undefined
  /** Markdown file body */
  body: Markdown
  url: string
}

export type Hotel = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Hotel'
  title: string
  citySlug: string
  slug: string
  date: IsoDateTimeString
  image: Image
  affiliateLink: string
  tags?: string[] | undefined
  notionId?: string | undefined
  status?: boolean | undefined
  bodyText?: string | undefined
  /** Markdown file body */
  body: Markdown
  url: string
}  

/** Nested types */
export type Image = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Image'
  src: string
  width: number
  height: number

}  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Blog | City | Hotel
export type DocumentTypeNames = 'Blog' | 'City' | 'Hotel'

export type NestedTypes = Image
export type NestedTypeNames = 'Image'

export type DataExports = {
  allDocuments: DocumentTypes[]
  allCities: City[]
  allBlogs: Blog[]
  allHotels: Hotel[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Blog: Blog
  City: City
  Hotel: Hotel
}

export type NestedTypeMap = {
  Image: Image
}

 