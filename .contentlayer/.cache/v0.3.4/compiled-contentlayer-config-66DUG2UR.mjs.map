{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import {\r\n  defineDocumentType,\r\n  defineNestedType,\r\n  makeSource,\r\n} from \"contentlayer/source-files\";\r\n\r\nconst Image = defineNestedType(() => ({\r\n  name: \"Image\",\r\n  fields: {\r\n    src: { type: \"string\", required: true },\r\n    width: { type: \"number\", required: true },\r\n    height: { type: \"number\", required: true },\r\n  },\r\n}));\r\n\r\nexport const City = defineDocumentType(() => ({\r\n  name: \"City\",\r\n  filePathPattern: `cities/**/*.md`,\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    slug: { type: \"string\", required: true },\r\n    date: { type: \"date\", required: true },\r\n    image: { type: \"nested\", of: Image, required: true },\r\n    tags: { type: \"list\", of: { type: \"string\" } },\r\n    notionId: { type: \"string\", required: false },\r\n    status: { type: \"boolean\", required: false },\r\n    bodyText: { type: \"string\", required: false },\r\n  },\r\n  computedFields: {\r\n    url: { type: \"string\", resolve: (doc) => `/${doc.slug}` },\r\n  },\r\n}));\r\n\r\nexport const Blog = defineDocumentType(() => ({\r\n  name: \"Blog\",\r\n  filePathPattern: `blog/**/*.md`,\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    slug: { type: \"string\", required: true },\r\n    date: { type: \"date\", required: true },\r\n    excerpt: { type: \"string\", required: false },\r\n    image: { type: \"nested\", of: Image, required: true },\r\n    tags: { type: \"list\", of: { type: \"string\" } },\r\n    notionId: { type: \"string\", required: false },\r\n    status: { type: \"boolean\", required: false },\r\n    bodyText: { type: \"string\", required: false },\r\n  },\r\n  computedFields: {\r\n    url: { type: \"string\", resolve: (doc) => `/blog/${doc.slug}` },\r\n  },\r\n}));\r\nexport const Hotel = defineDocumentType(() => ({\r\n  name: \"Hotel\",\r\n  filePathPattern: `hotels/**/*.md`,\r\n  fields: {\r\n    title: { type: \"string\", required: true },\r\n    citySlug: {\r\n      type: \"string\",\r\n      required: true,\r\n    },\r\n\r\n    slug: { type: \"string\", required: true },\r\n    date: { type: \"date\", required: true },\r\n    image: { type: \"nested\", of: Image, required: true },\r\n    affiliateLink: { type: \"string\", required: true },\r\n    tags: { type: \"list\", of: { type: \"string\" } },\r\n    notionId: { type: \"string\", required: false },\r\n    status: { type: \"boolean\", required: false },\r\n    bodyText: { type: \"string\", required: false },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: \"string\",\r\n      resolve: (doc) => `/${doc.citySlug}/${doc.slug}`,\r\n    },\r\n  },\r\n}));\r\n\r\nexport default makeSource({\r\n  contentDirPath: \"src/content\",\r\n  documentTypes: [City, Blog, Hotel],\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
